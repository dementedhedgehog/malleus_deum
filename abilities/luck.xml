<?xml version="1.0" encoding="utf-8"?>
<abilitygroup>
  <abilitygroupinfo>
    <abilitygrouptitle>Luck Abilities</abilitygrouptitle>
    <abilitygroupid><luck/></abilitygroupid>
    <abilitygroupfamily><general/></abilitygroupfamily>
    <abilitygroupdescription>
      <p>
	There are old adventures and their are unlucky adventurers,
	but there are not any old unlucky adventurers.
      </p>
    </abilitygroupdescription>
    <enabled/>
  </abilitygroupinfo>

  <ability>
    <abilitytitle>Brilliant Planner</abilitytitle>
    <abilityid>brilliant_planner</abilityid>    
    <abilityranks from="1" to="3"/>
    <abilitycheck>
      <defaults>luck_pool_defaults</defaults>
      <name>Check</name>
      <actiontype><immediate/></actiontype>
      <critsuccess>Not only has the character thought to bring the piece of equipment they need, they've also
      brought any other items that can reasonably be aquired that could reasonably be foreseen to be useful.</critsuccess>
      <righteoussuccess>Not only has the character thought to bring the piece of equipment they need, they've also
      brought another item that can reasonably be aquired that could reasonably be foreseen to be useful.  They
      can declare what this item is anytime later during the current game session.</righteoussuccess>
      <critfail></critfail>
    </abilitycheck>
    <prereqabilityrank>lucky_1</prereqabilityrank>	
    <spline><p x="60" y="60"/></spline> 
    <abilitydescription>
      <p>
	The character is a brilliant planner.  They may have thought
	far enough ahead to have organized to have just the right piece of
	equipment at just the right time.
      </p>

      <p>
	To use this ability the character states what their prior
	preparation for the current situation was.  The GM then rules
	on whether the check is reasonable: Was it possible that the
	character could have forseen the current state of affairs?
	Did they have the means to procure any equipment that their
	plan requires (if they had to buy equipment then they should
	deduct the price of the equipment if the check is successful).
      </p>

      <p>
	If the GM allows it, the player checks to see if their planning
	was successful.
      </p>
    </abilitydescription>
  </ability>

  
  <ability>
    <abilitytitle>Lucky</abilitytitle>
    <abilityid>lucky</abilityid>    
    <abilityranks untrained="0" from="1" to="3"/>
    <abilitycheck>
      <defaults>luck_pool_defaults</defaults>
      <name>Check</name>
      <trigger>Any time a blessed result is rolled.</trigger>
      <actiontype><immediate/></actiontype>
      <critsuccess>+4 Luck</critsuccess>
      <righteoussuccess>+3 Luck</righteoussuccess>
      <success>+2 Luck</success>
      <indifferent>1</indifferent>
      <effect></effect>
    </abilitycheck>
    <spline><p x="0" y="0"/></spline> 
    <abilitydescription>
      <p>
	The character has been favoured by the gods.  Whenever this character
	rolls a critical success on any check they can make a Lucky check regaining
	Luck into their Luck Pool if they are successful.

	FIXME: RENAME FAVOURED BY THE GODS!
      </p>      
    </abilitydescription>
  </ability>
  

  <ability>
    <abilitytitle>I Think I'm OK!</abilitytitle>
    <abilityid>itiok</abilityid>    
    <abilityranks from="1" to="3"/>
    <abilitycheck>
      <defaults>luck_pool_defaults</defaults>
      <name>Check</name>
      <actiontype><minor/></actiontype>
    </abilitycheck>
    <prereqabilityrank>lucky_1</prereqabilityrank>	
    <spline><p x="0" y="40"/></spline> 
    <abilitydescription>
      <p>
	This ability works in the same way as <emph>Not As Bad As It Looks</emph> (above),
	except that it can only be applied to one's self.
      </p>
    </abilitydescription>
  </ability>

  
  
  <ability>
    <abilitytitle>Misfortune</abilitytitle>
    <abilityid>misfortune</abilityid>    
    <abilityranks from="1" to="3"/>
    <abilitycheck>
      <defaults>luck_pool_defaults</defaults>
      <name>Check</name>
      <actiontype><reaction/></actiontype>
      <critsuccess></critsuccess>
      <critfail></critfail>
      <indifferent>1</indifferent>
    </abilitycheck>
    <prereqabilityrank>lucky_1</prereqabilityrank>
    <spline><p x="90" y="30"/></spline> 
    <abilitydescription>            
      <p>
        It is said that "Anything that can go wrong, will go wrong" and in this case 
        it does.  Misfortune allows a player to suggest an unfortunate event to 
	the GM.  Whenever something happens in game a character with this ability
	can make a pronouncement: "It would be a terrible misfortune if ...".  For
	example: "It would be a terrible misfortune if the high sorceror accidently
	spilled a drop of sacrificial blood from the chalice".  The GM then
	decides whether such a misfortune might occur.   If so the player may make
	attampt a Misfortune Check.
      </p>

      <p>
	As this ability can be terribly overpowered or game-destroying if used
	inappropriately the GM then gets a right of veto.  "Unfortunately, the
	sorceror is extremely careful knowing full well the consequences of such
	a mistake".  Alternatively, the GM could make a counter-suggestion
	"the sorcerors complete attention is focused on the sacrificial chalice
	you may be able to undo your bindings"?
      </p>

      <p>
	If the misfortune is acceptable to the player, they check and if successful
	the misfortune occurs.
      </p>

      <p>
	Misfortune is usable once per day for the whole party.
      </p>
    </abilitydescription>
  </ability>


  <ability>
    <abilitytitle>Nick of Time</abilitytitle>
    <abilityid>nick_of_time</abilityid>    
    <abilityranks from="1" to="4"/>
    <abilitycheck>
      <defaults>luck_pool_defaults</defaults>
      <name>Check</name>
      <actiontype><reaction/></actiontype>
      <critsuccess></critsuccess>
      <critfail></critfail>
    </abilitycheck>
    <prereqabilityrank>lucky_1</prereqabilityrank>	
    <spline><p x="-70" y="60"/></spline> 
    <abilitydescription>
      <p>
        Sometimes all you need is a little luck to get something done in the nick of 
	time. After an NPC, monster of character performs an action the player can try to 
	perform any action as a reaction <emph>in the nick of time</emph>.  If the GM
	chooses	to allow it the PC performs their action before the monsters action.
      </p>

      <p>
	Usable once per encounter for the whole party.
      </p>      
    </abilitydescription>
  </ability>

  
  <ability>
    <abilitytitle>Not As Bad As It Looks</abilitytitle>
    <abilityid>nabail</abilityid>    
    <abilityranks from="1" to="3"/>
    <abilitycheck>
      <defaults>luck_pool_defaults</defaults>
      <name>Check</name>
      <actiontype><minor/></actiontype>
      <critsuccess></critsuccess>
      <critfail></critfail>
    </abilitycheck>
    <prereqabilityrank>itiok_1</prereqabilityrank>	
    <spline><p x="0" y="35"/></spline> 
    <abilitydescription>
      <p>
        The character examines a wound, checks against Luck and if successful 
	declares the wound is <emph>not as bad as it looks</emph>.  The 
	wounded character heals D4+4 hit points, starting with health.  Only one
	such wound can be examined per encounter.
      </p>
    </abilitydescription>
  </ability>


  <ability>
    <abilitytitle>Reroll</abilitytitle>
    <abilityid>reroll</abilityid>
    <abilityranks untrained="0" from="1" to="3"/>
    <abilitycheck>
      <defaults>luck_pool_defaults</defaults>
      <name>Check</name>
      <actiontype><immediate/></actiontype>
      <critsuccess>Reroll with advantage</critsuccess>
      <critfail></critfail>
    </abilitycheck>
    <prereqabilityrank></prereqabilityrank>	
    <spline><p x="-90" y="30"/></spline> 
    <abilitydescription>
      <p>
	The character gets a lucky break and gets to reroll.
      </p>

      <p>
	<indexentry>Rerolls</indexentry>
	Players may use their <defn>Rerolls</defn> during the game to reroll <emph>all the 
	dice in the current check at most once</emph>.  E.g. Dourli makes a Check to hit 
	and rolls a 6 to hit on the skill die and an 18 for the fate.  He may choose to reroll
	both dice or take the result as is (he cannot choose to only reroll the 1).  Dourli chooses
	to reroll and misses again on his second roll. Dourli cannot reroll the second roll because
	a check may only be rerolled at most one time.  He must accept the results of the second roll
	even if they are worse than those of the first.
      </p>
    </abilitydescription>
  </ability>
</abilitygroup>
